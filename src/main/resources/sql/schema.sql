CREATE TABLE USER (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  USERNAME VARCHAR(50),
  PASSWORD VARCHAR(500),
  FULL_NAME VARCHAR(100),
  STATUS BOOLEAN DEFAULT FALSE,
  MOBILE_NUMBER VARCHAR(13),
  OTP VARCHAR(50) DEFAULT NULL,
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL
);

CREATE TABLE AUTHORITY (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(50),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL
);

CREATE TABLE USER_AUTHORITY (
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    USER_ID INT NOT NULL,
    AUTHORITY_ID INT NOT NULL,
	CREATE_DATE TIMESTAMP NOT NULL,
    MODIFIED_DATE TIMESTAMP NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USER (ID),
    FOREIGN KEY (AUTHORITY_ID) REFERENCES AUTHORITY (ID)
);

CREATE TABLE oauth_access_token (
  token_id VARCHAR(256) DEFAULT NULL,
  token BLOB,
  authentication_id VARCHAR(256) DEFAULT NULL,
  user_name VARCHAR(256) DEFAULT NULL,
  client_id VARCHAR(256) DEFAULT NULL,
  authentication BLOB,
  refresh_token VARCHAR(256) DEFAULT NULL
);

CREATE TABLE oauth_refresh_token (
  token_id VARCHAR(256) DEFAULT NULL,
  token BLOB,
  authentication BLOB
);

CREATE TABLE USER_PARAMS (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(50),
  DESCRIPTION VARCHAR(500),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL
);

CREATE TABLE USER_PARAMS_MAP (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  LOGIN_ID INT,
  USER_PARAM_ID INT,
  VALUE VARCHAR(100),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL,
  FOREIGN KEY (LOGIN_ID) REFERENCES USER (ID),
  FOREIGN KEY (USER_PARAM_ID) REFERENCES USER_PARAMS (ID)
);


CREATE TABLE PRODUCT_PARAMS (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(50),
  DESCRIPTION VARCHAR(500),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL
);

CREATE TABLE PRODUCT (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(50),
  DESCRIPTION VARCHAR(500),
  ADDED_BY INT,
  CODE VARCHAR(50),
  STATUS BOOLEAN DEFAULT FALSE,
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL,
  FOREIGN KEY (ADDED_BY) REFERENCES user (id)
);

CREATE TABLE PARAM_DETAILS (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  PRODUCT_PARAM_ID INT,
  VALUE VARCHAR(100),
  CODE VARCHAR(100),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL,
  FOREIGN KEY (PRODUCT_PARAM_ID) REFERENCES PRODUCT_PARAMS (ID)
);

CREATE TABLE PRODUCT_PARAM_MAP (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  PRODUCT_ID INT,
  PARAM_DETAILS_ID INT,
  VALUE VARCHAR(100),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL,
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (ID),
  FOREIGN KEY (PARAM_DETAILS_ID) REFERENCES PARAM_DETAILS (ID)
);

CREATE TABLE PRODUCT_VISIT (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  PRODUCT_ID INT,
  LOGIN_ID INT,
  DESCRIPTION VARCHAR(500),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL,
  FOREIGN KEY (LOGIN_ID) REFERENCES user (id)
);

CREATE TABLE LOCATION (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(50),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL
);

CREATE TABLE LOCATION_PARAMS (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(50),
  DESCRIPTION VARCHAR(500),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL
);

CREATE TABLE LOCATION_PARAM_MAP (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  LOCATION_ID INT,
  LOCATION_PARAM_ID INT,
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL,
  FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION (ID),
  FOREIGN KEY (LOCATION_PARAM_ID) REFERENCES LOCATION_PARAMS (ID)
);

CREATE TABLE CART (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  LOGIN_ID INT,
  PRODUCT_ID INT,
  QUANTITY INT,
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL
);


CREATE TABLE ORDER_STATUS (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(50),
  DESCRIPTION VARCHAR(500),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL
);


CREATE TABLE ORDER_DETAILS (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  LOGIN_ID INT,
  LOCATION_ID INT,
  ORDER_STATUS_ID INT,
  UPDATED_BY INT,
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL,
  FOREIGN KEY (LOGIN_ID) REFERENCES user (id),
  FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION (id),
  FOREIGN KEY (ORDER_STATUS_ID) REFERENCES ORDER_STATUS (id),
  FOREIGN KEY (UPDATED_BY) REFERENCES user (id)
);


CREATE TABLE ORDER_PARAMS (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(50),
  DESCRIPTION VARCHAR(500),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL
);

CREATE TABLE ORDER_PARAM_MAP (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORDER_ID INT,
  ORDER_PARAM_ID INT,
  VALUE VARCHAR(100),
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL,
  FOREIGN KEY (ORDER_ID) REFERENCES ORDER_DETAILS (ID),
  FOREIGN KEY (ORDER_PARAM_ID) REFERENCES ORDER_PARAMS (ID)
);

CREATE TABLE ORDER_PRODUCT_MAP (
  ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  ORDER_ID INT,
  PRODUCT_ID INT,
  QUANTITY INT,
  CREATE_DATE TIMESTAMP NOT NULL,
  MODIFIED_DATE TIMESTAMP NOT NULL,
  FOREIGN KEY (ORDER_ID) REFERENCES ORDER_DETAILS (ID),
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (ID)
);
